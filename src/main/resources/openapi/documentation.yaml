openapi: 3.0.4
info:
  title: "LMS APIs"
  description: "Public and Private Library Management System APIs"
  version: "0.0.1"
servers:
  - url: "http://0.0.0.0:8080"
paths:

  /items:
    get:
      description: "Search for item in collection"
      parameters:
        - name: "title"
          in: "path"
          required: false
          schema:
            type: string
            example: title=Dune-Messiah
        - name: "id"
          in: "path"
          required: false
          schema:
            type: string
            example: id=27
      responses:
        "200":
          description: "Depending on if an ID or title was used, single (ID) or list of (Title) CollectionItems is returned."
          content:
            application/json:
              schema:
                $ref: "./endpoints/items.yaml#/components/schemas/CollectionItem"
        "400":
          description: "Bad Request. Something was malformed or missing."
        "404":
          description: "No items were found using the provided information."
    post:
      description: "The method to add items to the collection."
      requestBody:
        description: "A JSON object that represents an item."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCollectionItem"
      responses:
        "200":
          description: "A success message is returned."
        "400":
          description: "Bad Request. Either the item failed to be inserted into the database, or something was wrong in the request."
    patch:
      description: "The method to update an item."
      requestBody:
        description: "The JSON object that represents a modified item."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionItem"
      responses:
        "200":
          description: "A success message is returned."
        "400":
          description: "Bad Request. Either the item failed to be updated in the database, or something was wrong in the request."
        "404":
          description: "No CollectionItem was found with the provided ID."
    delete:
      description: "The method to soft delete an item."
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
            example: id=27
      responses:
        "200":
          description: "A (sad) success message is returned."
        "400":
          description: "Bad Request. Either the item failed to be deleted from the database, or something was wrong in the request."

  /libraries:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: string
            example: id=27
      responses:
        "200":
          description: "OK"

components:
  schemas:
    CollectionItem:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "The unique ID of the item."
          example: 27
        title:
          type: "string"
          description: "The title of the item."
          example: "The Fellowship of the Ring"
        author:
          type: "array"
          description: "The creator(s) behind the media."
          example: [ "J.R.R. Tolkien" ]
        publisher:
          type: "string"
          description: "The company who published the media."
          example: ""
        publishingDate:
          type: "string"
          description: "The date the book was published in yyyy-MM-DD format. 9999-12-31 for unknown."
          example: ""
        locNumber:
          type: "string"
          description: "The Library of Congress categorization number."
          example: ""
        deweyDecimalNumber:
          type: "string"
          description: "The Dewey Decimal Number."
          example: ""
        isbn:
          type: "integer"
          format: "int64"
          description: "The ISBN number assigned to the book. Also known as the barcode."
          example: 0
        sortTitle:
          type: "string"
          description: "The title of the book with any articles moved to the end for sorting purposes."
          example: "Fellowship of the Ring, The"
        "format":
          type: "string"
          description: "The format the media is in. E.g. book, magazine, dvd, 8-track, etc."
          example: "book"
        language:
          type: "string"
          description: "The two letter abbreviation of the language the media is in."
          example: ""
        pageCount:
          type: "integer"
          format: "int32"
          description: "The number of pages the media has. 0 if not a book/magazine."
          example: 450
        categories:
          type: "array"
          description: "A list of the subjects/categories the media falls into."
          example: [ "Fantasy", "High Fantasy", "Linguistics" ]
        description:
          type: "string"
          description: "A short synopsis or blurb about the media."
          example: ""
        priceInCents:
          type: "integer"
          format: "int32"
          description: "The cost of the item, in cents. E.g. $20 is 2000."
          example: 4000
        coverImageUri:
          type: "string"
          description: "The path to find the cover image for the item."
          example: ""
        isCheckedIn:
          type: "boolean"
          description: "A flag to show if the item is checked in (true) or checked out (false)."
          example: true
        isArchived:
          type: "boolean"
          description: "A flag to show if the item is 'deleted' (true) or still in circulation (false)."
          example: false
        isLost:
          type: "boolean"
          description: "A flag to show if the item is lost (true) or not yet lost (false)."
          example: false
        lostDate:
          type: "string"
          description: "A string representation of the date the item is updated to lost. yyyy-MM-DD. 9999-12-31 for not lost."
          example: "9999-12-31"
    NewCollectionItem:
      type: "object"
      properties:
        title:
          type: "string"
          description: "The title of the item."
          example: "The Fellowship of the Ring"
        author:
          type: "array"
          description: "The creator(s) behind the media."
          example: [ "J.R.R. Tolkien" ]
        publisher:
          type: "string"
          description: "The company who published the media."
          example: ""
        publishingDate:
          type: "string"
          description: "The date the book was published in yyyy-MM-DD format. 9999-12-31 for unknown."
          example: ""
        locNumber:
          type: "string"
          description: "The Library of Congress categorization number."
          example: ""
        deweyDecimalNumber:
          type: "string"
          description: "The Dewey Decimal Number."
          example: ""
        isbn:
          type: "integer"
          format: "int64"
          description: "The ISBN number assigned to the book. Also known as the barcode."
          example: 0
        sortTitle:
          type: "string"
          description: "The title of the book with any articles moved to the end for sorting purposes."
          example: "Fellowship of the Ring, The"
        "format":
          type: "string"
          description: "The format the media is in. E.g. book, magazine, dvd, 8-track, etc."
          example: "book"
        language:
          type: "string"
          description: "The two letter abbreviation of the language the media is in."
          example: "en, el"
        pageCount:
          type: "integer"
          format: "int32"
          description: "The number of pages the media has. 0 if not a book/magazine."
        categories:
          type: "array"
          description: "A list of the subjects/categories the media falls into."
          example: [ "Fantasy", "High Fantasy", "Linguistics" ]
        description:
          type: "string"
          description: "A short synopsis or blurb about the media."
          example: "Super cool book about elves and humans and dwarves."
        priceInCents:
          type: "integer"
          format: "int32"
          description: "The cost of the item, in cents. E.g. $20 is 2000."
          example: 4000
        coverImageUri:
          type: "string"
          description: "The path to find the cover image for the item."
          example: "path/to/blob/cover.png"
        isCheckedIn:
          type: "boolean"
          description: "A flag to show if the item is checked in (true) or checked out (false)."
          example: true
        isArchived:
          type: "boolean"
          description: "A flag to show if the item is 'deleted' (true) or still in circulation (false)."
          example: false
        isLost:
          type: "boolean"
          description: "A flag to show if the item is lost (true) or not yet lost (false)."
          example: false
        lostDate:
          type: "string"
          description: "A string representation of the date the item is updated to lost. yyyy-MM-DD. 9999-12-31 for not lost."
          example: "9999-12-31"

    Patron:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: ""
          example: 201
        name:
          type: "string"
          description: ""
          example: "Nick Kalar"
        hasGoodStanding:
          type: "string"
          description: ""
          example: true
        feeTotal:
          type: "integer"
          format: "int64"
          description: "The amount owed by the parton for late/lost books in cents"
          example: 25
        isArchived:
          type: "boolean"
          description: "A flag to denote a deleted or expired accounts. Accounts become archived if not used for a certain amount of time."
          example: false
        lastLogin:
          type: "string"
          description: "A string representation of the last time a user logged in. yyyy-MM-DD."
          example: "2025-08-11"
        password:
          type: "string"
          description: "The hashed password for the patron. This will only be stored in memory for as long as it is needed, then will be null."
          example: "4bf94ee173fd60f5a2a01870390e27ae7b21acc21fe8c1ae66b3d29e4f1155d1"
    NewPatron:
      type: "object"
      properties:
        name:
          type: "string"
          description: ""
          example: "Nick Kalar"
        hasGoodStanding:
          type: "string"
          description: ""
          example: true
        feeTotal:
          type: "integer"
          format: "int64"
          description: "The amount owed by the parton for late/lost books in cents"
          example: 25
        isArchived:
          type: "boolean"
          description: "A flag to denote a deleted or expired accounts. Accounts become archived if not used for a certain amount of time."
          example: false
        lastLogin:
          type: "string"
          description: "A string representation of the last time a user logged in. yyyy-MM-DD."
          example: "2025-08-11"
        password:
          type: "string"
          description: "The hashed password for the patron. This will only be stored in memory for as long as it is needed, then will be null."
          example: "4bf94ee173fd60f5a2a01870390e27ae7b21acc21fe8c1ae66b3d29e4f1155d1"

    Staff:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: ""
          example: 201
    NewStaff:
      type: "object"
      properties:
        name:
          type: "string"
          description: ""
          example: "Nick Kalar"

    Library:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: ""
          example: 1
        name:
          type: "string"
          description: ""
          example: "Berta Yero Fernandez Memorial Library"
        address:
          type: "string"
          description: ""
          example: "628 Arvin St. Bakersfield, Ca 93308"
    NewLibrary:
      type: "object"
      properties:
        name:
          type: "string"
          description: ""
          example: "Berta Yero Fernandez Memorial Library"
        address:
          type: "string"
          description: ""
          example: "628 Arvin St. Bakersfield, Ca 93308"
